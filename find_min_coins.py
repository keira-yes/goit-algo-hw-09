def find_min_coins(coins, amount):
    # Список для збереження мінімальної кількості монет для кожної суми
    dp = [float('inf')] * (amount + 1)
    # Ініціалізуємо значення для суми 0 (нульової решти)
    dp[0] = 0
    # Створюємо список для збереження останньої монети, використаної для формування суми
    last_coin = [-1] * (amount + 1)

    # Проходимося по кожному доступному номіналу монет
    for coin in coins:
        # Проходимося по кожній сумі від поточного номіналу до поточної суми для формування решти
        for i in range(coin, amount + 1):
            # Обчислюємо мінімальну кількість монет для поточної суми за допомогою даного номіналу
            if dp[i - coin] + 1 < dp[i]:
                dp[i] = dp[i - coin] + 1
                # Зберігаємо останню монету, використану для формування поточної суми
                last_coin[i] = coin

    # Словник для збереження кількості монет кожного номіналу для оптимального розбиття суми
    result = {}
    # Ініціалізуємо залишкову суму як поточну суму
    remaining = amount
    # Проходимося по кожній монеті, використаній для формування суми, та зберігаємо їх кількість
    while remaining > 0:
        coin = last_coin[remaining]
        result[coin] = result.get(coin, 0) + 1
        remaining -= coin

    return result